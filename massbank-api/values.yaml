# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

host: "msbi.ipb-halle.de"
pathPrefix: "MassBank"

image:
  repository: quay.io/massbank/massbank-api

# postggresql config
# for massbank we need a special version of postgres with bingo cartridge
global:
  security:
    allowInsecureImages: true
postgresql:
  image:
    tag: "15"
    debug: true
  auth:
    postgresPassword: "massbankAdminPassword"
    username: "massbank"
    password: "massbankPassword"
    database: "massbank"
  primary:
    initdb:
      user: "postgres"
      password: "massbankAdminPassword"
      scriptsConfigMap: "postgres-config"
    initContainers:
      - name: bingo-init
        image: quay.io/massbank/postgres-bingo-init:v15-bingo-1.29.0
        command:
          - "sh"
          - "-c"
          - |
            cp -rp /bingo-postgres/* /opt/bingo-postgres/
        volumeMounts:
          - name: bingo-volume
            mountPath: /opt/bingo-postgres
    extraVolumes: |
      - name: bingo-volume
        emptyDir: {}
    extraVolumeMounts: |
      - name: bingo-volume
        mountPath: /opt/bingo-postgres
    resourcesPreset: "medium"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels:
  app: massbank-api

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: nginx
  annotations: {}
  hosts:
    - host: "{{ .Values.host }}"
      paths:
        - path: "/{{ .Values.pathPrefix }}-api"
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 100m
    memory: 200Mi
  limits:
    cpu: 1000m
    memory: 800Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: "/{{ .Values.pathPrefix }}-api/version"
    port: http
  initialDelaySeconds: 120
  periodSeconds: 60
  timeoutSeconds: 10
  failureThreshold: 6
readinessProbe:
  httpGet:
    path: "/{{ .Values.pathPrefix }}-api/version"
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 4
  failureThreshold: 3

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
